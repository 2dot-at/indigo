// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

// Lexicon schema: tools.ozone.signature.searchAccounts

package ozone

import (
	"context"

	comatproto "github.com/bluesky-social/indigo/api/atproto"
	lexutil "github.com/bluesky-social/indigo/lex/util"
)

// SignatureSearchAccounts_Output is the output of a tools.ozone.signature.searchAccounts call.
type SignatureSearchAccounts_Output struct {
	Accounts []*comatproto.AdminDefs_AccountView `json:"accounts" cborgen:"accounts"`
	Cursor   *string                             `json:"cursor,omitempty" cborgen:"cursor,omitempty"`
}

// SignatureSearchAccounts calls the XRPC method "tools.ozone.signature.searchAccounts".
func SignatureSearchAccounts(ctx context.Context, c lexutil.LexClient, cursor string, limit int64, values []string) (*SignatureSearchAccounts_Output, error) {
	var out SignatureSearchAccounts_Output

	params := map[string]interface{}{}
	if cursor != "" {
		params["cursor"] = cursor
	}
	if limit != 0 {
		params["limit"] = limit
	}
	params["values"] = values
	if err := c.LexDo(ctx, lexutil.Query, "", "tools.ozone.signature.searchAccounts", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
