// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package atproto

// schema: com.atproto.admin.updateCommunicationTemplate

import (
	"context"

	"github.com/bluesky-social/indigo/xrpc"
)

// AdminUpdateCommunicationTemplate_Input is the input argument to a com.atproto.admin.updateCommunicationTemplate call.
type AdminUpdateCommunicationTemplate_Input struct {
	// contentMarkdown: Content of the template, markdown supported, can contain variable placeholders.
	ContentMarkdown *string `json:"contentMarkdown,omitempty" cborgen:"contentMarkdown,omitempty"`
	Disabled        *bool   `json:"disabled,omitempty" cborgen:"disabled,omitempty"`
	// id: ID of the template to be updated.
	Id string `json:"id" cborgen:"id"`
	// name: Name of the template.
	Name *string `json:"name,omitempty" cborgen:"name,omitempty"`
	// subject: Subject of the message, used in emails.
	Subject *string `json:"subject,omitempty" cborgen:"subject,omitempty"`
	// updatedBy: DID of the user who is updating the template.
	UpdatedBy *string `json:"updatedBy,omitempty" cborgen:"updatedBy,omitempty"`
}

// AdminUpdateCommunicationTemplate calls the XRPC method "com.atproto.admin.updateCommunicationTemplate".
func AdminUpdateCommunicationTemplate(ctx context.Context, c *xrpc.Client, input *AdminUpdateCommunicationTemplate_Input) (*AdminDefs_CommunicationTemplateView, error) {
	var out AdminDefs_CommunicationTemplateView
	if err := c.Do(ctx, xrpc.Procedure, "application/json", "com.atproto.admin.updateCommunicationTemplate", nil, input, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
