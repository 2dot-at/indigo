// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

// Lexicon schema: app.bsky.unspecced.getOnboardingSuggestedStarterPacksSkeleton

package bsky

import (
	"context"

	lexutil "github.com/bluesky-social/indigo/lex/util"
)

// UnspeccedGetOnboardingSuggestedStarterPacksSkeleton_Output is the output of a app.bsky.unspecced.getOnboardingSuggestedStarterPacksSkeleton call.
type UnspeccedGetOnboardingSuggestedStarterPacksSkeleton_Output struct {
	StarterPacks []string `json:"starterPacks" cborgen:"starterPacks"`
}

// UnspeccedGetOnboardingSuggestedStarterPacksSkeleton calls the XRPC method "app.bsky.unspecced.getOnboardingSuggestedStarterPacksSkeleton".
//
// viewer: DID of the account making the request (not included for public/unauthenticated queries).
func UnspeccedGetOnboardingSuggestedStarterPacksSkeleton(ctx context.Context, c lexutil.LexClient, limit int64, viewer string) (*UnspeccedGetOnboardingSuggestedStarterPacksSkeleton_Output, error) {
	var out UnspeccedGetOnboardingSuggestedStarterPacksSkeleton_Output

	params := map[string]interface{}{}
	if limit != 0 {
		params["limit"] = limit
	}
	if viewer != "" {
		params["viewer"] = viewer
	}
	if err := c.LexDo(ctx, lexutil.Query, "", "app.bsky.unspecced.getOnboardingSuggestedStarterPacksSkeleton", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
