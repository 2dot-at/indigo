// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

// Lexicon schema: app.bsky.notification.putActivitySubscription

package bsky

import (
	"context"

	lexutil "github.com/bluesky-social/indigo/lex/util"
)

// NotificationPutActivitySubscription_Input is the input argument to a app.bsky.notification.putActivitySubscription call.
type NotificationPutActivitySubscription_Input struct {
	ActivitySubscription *NotificationDefs_ActivitySubscription `json:"activitySubscription" cborgen:"activitySubscription"`
	Subject              string                                 `json:"subject" cborgen:"subject"`
}

// NotificationPutActivitySubscription_Output is the output of a app.bsky.notification.putActivitySubscription call.
type NotificationPutActivitySubscription_Output struct {
	ActivitySubscription *NotificationDefs_ActivitySubscription `json:"activitySubscription,omitempty" cborgen:"activitySubscription,omitempty"`
	Subject              string                                 `json:"subject" cborgen:"subject"`
}

// NotificationPutActivitySubscription calls the XRPC method "app.bsky.notification.putActivitySubscription".
func NotificationPutActivitySubscription(ctx context.Context, c lexutil.LexClient, input *NotificationPutActivitySubscription_Input) (*NotificationPutActivitySubscription_Output, error) {
	var out NotificationPutActivitySubscription_Output
	if err := c.LexDo(ctx, lexutil.Procedure, "application/json", "app.bsky.notification.putActivitySubscription", nil, input, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
